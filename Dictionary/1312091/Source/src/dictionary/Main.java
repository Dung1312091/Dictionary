/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 *
 * @author Dung Developer
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     * 
     */
    TreeMap<String, String> dicEV = new TreeMap<>();
    TreeMap<String, String> dicVE = new TreeMap<>();
    DefaultListModel<String> modelEV = new DefaultListModel<>();
    DefaultListModel<String> modelVE = new DefaultListModel<>();
    DefaultListModel<String> modelFavoriteEV = new DefaultListModel<>();
    DefaultListModel<String> modelFavoriteVE = new DefaultListModel<>();
    TreeMap<String, String> history = new TreeMap<>();
    SimpleDateFormat formatDate =  new SimpleDateFormat("MM/dd/yyyy");
    DefaultTableModel modelHistoryE = new DefaultTableModel();
    DefaultTableModel modelHistoryV = new DefaultTableModel();
    public Main() {
        initComponents();
        readFileXml(dicEV, "Anh_Viet.xml", modelEV);
        readFileXml(dicVE, "Viet_Anh.xml",modelVE);
        jListEV.setModel(modelEV);
        jListVE.setModel(modelVE);
        jListElfavorite.setModel(modelFavoriteEV);
        jListVnfavorite.setModel(modelFavoriteVE);
        putWordToList(dicEV, modelEV);
        putWordToList(dicVE, modelVE);
        jTableElHistory.getTableHeader().setReorderingAllowed(false);
        jTableVNhistory.getTableHeader().setReorderingAllowed(false);
        modelHistoryE = (DefaultTableModel)  jTableElHistory.getModel();
        modelHistoryV = (DefaultTableModel) jTableVNhistory.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneMain = new javax.swing.JTabbedPane();
        jPanelSearch = new javax.swing.JPanel();
        jTabbedPaneAVVA = new javax.swing.JTabbedPane();
        jPanelAV = new javax.swing.JPanel();
        jTextFieldKeySearchAV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEV = new javax.swing.JList<>();
        jPanelVA = new javax.swing.JPanel();
        jTextFieldKeySearchVA = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListVE = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPaneResuft = new javax.swing.JTextPane();
        jLabelResuft = new javax.swing.JLabel();
        jButtonRead = new javax.swing.JButton();
        jButtonFavorite = new javax.swing.JButton();
        jPanelFavorite = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListElfavorite = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListVnfavorite = new javax.swing.JList<>();
        jLabelresuftfavorite = new javax.swing.JLabel();
        jButtonsoundfavorite = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaFavorite = new javax.swing.JTextArea();
        jPanelStatictical = new javax.swing.JPanel();
        jDateChooserbegin = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserfinish = new com.toedter.calendar.JDateChooser();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableElHistory = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableVNhistory = new javax.swing.JTable();
        jButtonClear = new javax.swing.JButton();
        jButtonFind = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dictionary");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPaneMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneMainStateChanged(evt);
            }
        });

        jPanelSearch.setBackground(new java.awt.Color(204, 204, 255));

        jPanelAV.setBackground(new java.awt.Color(204, 204, 255));

        jTextFieldKeySearchAV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldKeySearchAVMouseClicked(evt);
            }
        });
        jTextFieldKeySearchAV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKeySearchAVActionPerformed(evt);
            }
        });
        jTextFieldKeySearchAV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldKeySearchAVKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("English");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jListEV.setBackground(new java.awt.Color(204, 204, 255));
        jListEV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListEVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListEV);

        javax.swing.GroupLayout jPanelAVLayout = new javax.swing.GroupLayout(jPanelAV);
        jPanelAV.setLayout(jPanelAVLayout);
        jPanelAVLayout.setHorizontalGroup(
            jPanelAVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldKeySearchAV)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAVLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelAVLayout.setVerticalGroup(
            jPanelAVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldKeySearchAV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPaneAVVA.addTab("Eng-Vie", jPanelAV);

        jTextFieldKeySearchVA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldKeySearchVAMouseClicked(evt);
            }
        });
        jTextFieldKeySearchVA.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTextFieldKeySearchVAComponentResized(evt);
            }
        });
        jTextFieldKeySearchVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKeySearchVAActionPerformed(evt);
            }
        });
        jTextFieldKeySearchVA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldKeySearchVAKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Vietnamese");

        jListVE.setBackground(new java.awt.Color(204, 204, 255));
        jListVE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListVEMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListVE);

        javax.swing.GroupLayout jPanelVALayout = new javax.swing.GroupLayout(jPanelVA);
        jPanelVA.setLayout(jPanelVALayout);
        jPanelVALayout.setHorizontalGroup(
            jPanelVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
            .addGroup(jPanelVALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldKeySearchVA)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVALayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelVALayout.setVerticalGroup(
            jPanelVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldKeySearchVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPaneAVVA.addTab("Vie-Eng", jPanelVA);

        jTextPaneResuft.setEnabled(false);
        jScrollPane3.setViewportView(jTextPaneResuft);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
        );

        jLabelResuft.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jButtonRead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/mixcro.png"))); // NOI18N
        jButtonRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadActionPerformed(evt);
            }
        });

        jButtonFavorite.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButtonFavorite.setText("Add Favorite");
        jButtonFavorite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFavoriteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneAVVA, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSearchLayout.createSequentialGroup()
                        .addComponent(jLabelResuft, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRead, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButtonFavorite, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneAVVA, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelResuft)
                        .addComponent(jButtonRead))
                    .addComponent(jButtonFavorite, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Search", jPanelSearch);

        jPanelFavorite.setBackground(new java.awt.Color(204, 204, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("English Favorite");

        jListElfavorite.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jListElfavorite.setValueIsAdjusting(true);
        jListElfavorite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListElfavoriteMouseClicked(evt);
            }
        });
        jListElfavorite.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListElfavoriteValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jListElfavorite);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Vietnamese Favorite");

        jListVnfavorite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListVnfavoriteMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jListVnfavorite);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)))
                .addContainerGap(87, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabelresuftfavorite.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jButtonsoundfavorite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/mixcro.png"))); // NOI18N
        jButtonsoundfavorite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsoundfavoriteActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Remove Favorite");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextAreaFavorite.setColumns(20);
        jTextAreaFavorite.setLineWrap(true);
        jTextAreaFavorite.setRows(5);
        jTextAreaFavorite.setEnabled(false);
        jScrollPane6.setViewportView(jTextAreaFavorite);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelFavoriteLayout = new javax.swing.GroupLayout(jPanelFavorite);
        jPanelFavorite.setLayout(jPanelFavoriteLayout);
        jPanelFavoriteLayout.setHorizontalGroup(
            jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelresuftfavorite, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addComponent(jButtonsoundfavorite, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 486, Short.MAX_VALUE))))
        );
        jPanelFavoriteLayout.setVerticalGroup(
            jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, Short.MAX_VALUE)
            .addGroup(jPanelFavoriteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonsoundfavorite, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFavoriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelresuftfavorite)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPaneMain.addTab("Favorite", jPanelFavorite);

        jPanelStatictical.setBackground(new java.awt.Color(204, 204, 255));

        jDateChooserbegin.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Begin Day");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("Finish Day");

        jDateChooserfinish.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jTableElHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Word", "Count"
            }
        ));
        jScrollPane7.setViewportView(jTableElHistory);

        jLabel7.setText("English Search History ");

        jLabel8.setText("Vietnamese Search History");

        jTableVNhistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Từ", "Số lần"
            }
        ));
        jScrollPane8.setViewportView(jTableVNhistory);

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonFind.setText("Find");
        jButtonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelStaticticalLayout = new javax.swing.GroupLayout(jPanelStatictical);
        jPanelStatictical.setLayout(jPanelStaticticalLayout);
        jPanelStaticticalLayout.setHorizontalGroup(
            jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                        .addGroup(jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserbegin, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserfinish, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jButtonFind)))
                        .addGap(0, 149, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelStaticticalLayout.setVerticalGroup(
            jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(8, 8, 8))
                    .addComponent(jDateChooserbegin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserfinish, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelStaticticalLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9))
                    .addComponent(jButtonFind))
                .addGap(46, 46, 46)
                .addGroup(jPanelStaticticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jButtonClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPaneMain.addTab("Statictical", jPanelStatictical);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneMain)
        );

        setSize(new java.awt.Dimension(766, 592));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private static final String VOICENAME = "kevin16";
    private void jButtonReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadActionPerformed
        // TODO add your handling code here:
        Voice voice;
        VoiceManager vm = VoiceManager.getInstance();
        voice = vm.getVoice(VOICENAME);
        voice.allocate();
        try {
            voice.speak(jLabelResuft.getText());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonReadActionPerformed
//su kien click chuot tren list
    private void jListEVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListEVMouseClicked
        // TODO add your handling code here:
      jTextPaneResuft.setText(dicEV.get(jListEV.getSelectedValue()));
      jTextFieldKeySearchAV.setText(jListEV.getSelectedValue());//gan gia tri cho text tim kiem
      jLabelResuft.setText(jListEV.getSelectedValue());//gan gia tri cho lable 
       if (evt.getClickCount() == 1)
        {
            writeHistory(jListEV.getSelectedValue(), "HistoryEV.txt");
        }
    }//GEN-LAST:event_jListEVMouseClicked

    private void jTextFieldKeySearchAVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchAVActionPerformed
        // TODO add your handling code here:
        jTextPaneResuft.setText(dicEV.get(jListEV.getSelectedValue()));
        jLabelResuft.setText(jListEV.getSelectedValue());
        writeHistory(jListEV.getSelectedValue(), "HistoryEV.txt");
    }//GEN-LAST:event_jTextFieldKeySearchAVActionPerformed
    private String getKeyStartsWith(String s, TreeMap<String, String> tm){
        for (String x : tm.keySet()) {
            if (x.startsWith(s))
                return x;
        }
        return "";
    }
    //su kien list tu dong hien thi ket qua khi go tu khoa tim kiem tren text
    private void jTextFieldKeySearchAVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchAVKeyReleased
        // TODO add your handling code here:
       jListEV.setSelectedValue(getKeyStartsWith(jTextFieldKeySearchAV.getText(), dicEV), rootPaneCheckingEnabled);
       jListEV.ensureIndexIsVisible((jListEV.getSelectedIndex()+17));
    }//GEN-LAST:event_jTextFieldKeySearchAVKeyReleased

    private void jListVEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListVEMouseClicked
        // TODO add your handling code here:
      jTextPaneResuft.setText(dicVE.get(jListVE.getSelectedValue()));
      jTextFieldKeySearchVA.setText(jListVE.getSelectedValue());
      jLabelResuft.setText(jListVE.getSelectedValue());
       if (evt.getClickCount() == 1)
        {
            writeHistory(jListVE.getSelectedValue(), "HistoryVE.txt");
        }
    }//GEN-LAST:event_jListVEMouseClicked

    private void jTextFieldKeySearchVAComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchVAComponentResized
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jTextFieldKeySearchVAComponentResized

    private void jTextFieldKeySearchVAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchVAKeyReleased
        // TODO add your handling code here:
       jListVE.setSelectedValue(getKeyStartsWith(jTextFieldKeySearchVA.getText(), dicVE), rootPaneCheckingEnabled);
       jListVE.ensureIndexIsVisible((jListVE.getSelectedIndex()+17));
    }//GEN-LAST:event_jTextFieldKeySearchVAKeyReleased

    private void jTextFieldKeySearchAVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchAVMouseClicked
        // TODO add your handling code here:
        //Click vao text tu dong xoa du lieu
        jTextFieldKeySearchAV.setText("");
    }//GEN-LAST:event_jTextFieldKeySearchAVMouseClicked

    private void jTextFieldKeySearchVAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchVAMouseClicked
        // TODO add your handling code here:
        jTextFieldKeySearchVA.setText("");
    }//GEN-LAST:event_jTextFieldKeySearchVAMouseClicked

    private void jButtonFavoriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFavoriteActionPerformed
        // TODO add your handling code here:
        if(jTabbedPaneAVVA.getSelectedIndex() == 0)
        {
            if (modelFavoriteEV.contains(jListEV.getSelectedValue()) == false)
            modelFavoriteEV.addElement(jListEV.getSelectedValue());
        }
        else
        {
            if (modelFavoriteVE.contains(jListVE.getSelectedValue()) == false)
            modelFavoriteVE.addElement(jListVE.getSelectedValue());
        }
    }//GEN-LAST:event_jButtonFavoriteActionPerformed

    private void jListElfavoriteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListElfavoriteMouseClicked
        // TODO add your handling code here:
        //su kien click tren list fovorite EV
       if (modelFavoriteEV.isEmpty())
            return;
        jTextAreaFavorite.setText(dicEV.get(jListElfavorite.getSelectedValue()));
        jLabelresuftfavorite.setText(jListElfavorite.getSelectedValue());
        jListElfavorite.clearSelection();
    }//GEN-LAST:event_jListElfavoriteMouseClicked

    private void jListVnfavoriteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListVnfavoriteMouseClicked
        // TODO add your handling code here:
         //su kien click tren list fovorite EV
       if (modelFavoriteVE.isEmpty())
            return;
        jTextAreaFavorite.setText(dicVE.get(jListVnfavorite.getSelectedValue()));
        jLabelresuftfavorite.setText(jListVnfavorite.getSelectedValue());
        jListVnfavorite.clearSelection();
    }//GEN-LAST:event_jListVnfavoriteMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Delete Favorite
        // TODO add your handling code here:
        if (jListElfavorite.getSelectedValuesList()!= null)
        {
            modelFavoriteEV.removeElement(jListElfavorite.getSelectedValue());
            jLabelresuftfavorite.setText("");
            jTextAreaFavorite.setText("");
        }
        if (jListVnfavorite.getSelectedValuesList()!= null)
        {
            modelFavoriteVE.removeElement(jListVnfavorite.getSelectedValue());
            jLabelresuftfavorite.setText("");
            jTextAreaFavorite.setText("");
        }
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jListElfavoriteValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListElfavoriteValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jListElfavoriteValueChanged
    private void writeHistory(String s, String fileName)
    {
        try {
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(fileName, true))) {
                bw.write(s);
                bw.newLine();
                Date nowDate = new Date();
                bw.write(formatDate.format(nowDate.getTime()));
                bw.newLine();
            }
        } catch (Exception ex) {
        }
        
    }
     private int checkTable(DefaultTableModel model, String s){
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if (s.equals(model.getValueAt(i, 0))) {
                return i;
            } 
        }
        return -1;
    }
   private boolean checkDay(String s ) throws ParseException{
       Date begin = new Date();
       begin = jDateChooserbegin.getDate();
       Date finish = new Date();
       finish = jDateChooserfinish.getDate();
       Date d3 = formatDate.parse(s);
       if(begin.compareTo(d3)<=0 && finish.compareTo(d3)>=0)
       {
           return true;
       }
       return false;
   }
   
    private void readHistory(DefaultTableModel model, String fileName){
        model.setRowCount(0);
        try {
            BufferedReader br = new BufferedReader(new FileReader(fileName));
            String lineWord = br.readLine();
            String lineDate = br.readLine();
            while (lineWord != null && lineDate != null)
            {
                if (checkTable(model, lineWord) == -1)
                {
                    
                    if (checkDay(lineDate)==true)
                    model.insertRow((model.getRowCount()), new Object[]{lineWord,1, 1});
                }
                else 
                {
                    int  lineRows = checkTable(model, lineWord);
                    
                    if (checkDay(lineDate) == true)
                    {
                        // Week++
                        int count = Integer.parseInt(model.getValueAt(lineRows, 1).toString());
                        count++;
                        model.setValueAt(count, lineRows, 1);
                        // month++
                        int count1 = Integer.parseInt(model.getValueAt(lineRows, 2).toString());
                        count1++;
                        model.setValueAt(count1, lineRows, 2);
                    }
                    
                }
                lineWord = br.readLine();
                lineDate = br.readLine();
            }
            br.close();
           
        } catch (Exception ex) {
            
        }
    }

    public void readFavorite(DefaultListModel<String> favoriteList, String fileName)
	{
            try{
                String line;
                try (FileInputStream file = new FileInputStream(new File(fileName)); BufferedReader buf = new BufferedReader(new InputStreamReader(file, "Unicode"))) {
                    line = buf.readLine();
                    int size = Integer.parseInt(line);
                    if(size == 0) {
                    } else
                    {
                        for(int i = 0; i < size; i++)
                        {
                            line = buf.readLine();
                            if (favoriteList.contains(line) == false)
                                favoriteList.addElement(line);
                        }
                    }
                }
                
            }catch(IOException | NumberFormatException ex)
            {};
	}
	
    public void writeFavorite(DefaultListModel<String> favoriteList, String fileName)
	{
            try(BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(fileName), "Unicode"))) {
		
                Integer temp = favoriteList.getSize();
                out.write(temp.toString());
                out.newLine();
		
		for(int i = 0; i < favoriteList.getSize(); i++)
		{
				out.write(favoriteList.getElementAt(i));
				out.newLine();
			
                }
                out.close();
            }catch(Exception ex)
            {
            }
		
	}
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        if (modelFavoriteEV.isEmpty())
            readFavorite(modelFavoriteEV, "FavoriteEV.txt");
        if (modelFavoriteVE.isEmpty())
            readFavorite(modelFavoriteVE, "FavoriteVE.txt");
    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        writeFavorite(modelFavoriteEV, "FavoriteEV.txt");
        writeFavorite(modelFavoriteVE, "FavoriteVE.txt");
    }//GEN-LAST:event_formWindowClosing

    private void jTextFieldKeySearchVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKeySearchVAActionPerformed
        // TODO add your handling code here:
        jTextPaneResuft.setText(dicVE.get(jListVE.getSelectedValue()));
        jLabelResuft.setText(jListVE.getSelectedValue());
        writeHistory(jListVE.getSelectedValue(), "HistoryVE.txt");
    }//GEN-LAST:event_jTextFieldKeySearchVAActionPerformed

    private void jTabbedPaneMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneMainStateChanged
        // TODO add your handling code here:
//        if (jTabbedPaneMain.getSelectedIndex() == 2)
//        {
//            readHistory(modelHistoryE, "HistoryEV.txt");
//            readHistory(modelHistoryV, "HistoryVE.txt");
//        }
    }//GEN-LAST:event_jTabbedPaneMainStateChanged
    private void clearHistory(DefaultTableModel model, String fileName)
    {
        model.setRowCount(0);
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(fileName, false));
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void jButtonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindActionPerformed
        // TODO add your handling code here:
            readHistory(modelHistoryE, "HistoryEV.txt");
            readHistory(modelHistoryV, "HistoryVE.txt");
    }//GEN-LAST:event_jButtonFindActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        clearHistory(modelHistoryE, "HistoryEV.txt");
        clearHistory(modelHistoryV, "HistoryVE.txt");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonsoundfavoriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsoundfavoriteActionPerformed
        // TODO add your handling code here:
        Voice voice;
        VoiceManager vm = VoiceManager.getInstance();
        voice = vm.getVoice(VOICENAME);
        voice.allocate();
        try {
            voice.speak(jLabelresuftfavorite.getText());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonsoundfavoriteActionPerformed

    /**
     * @param args the command line arguments
     */
//  Doc file XML
    private void readFileXml(TreeMap<String, String> dic, String fileName,DefaultListModel<String> model )
    {
        try{
        File lib = new File(fileName);
        DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance();
        DocumentBuilder build =  fac.newDocumentBuilder();
        
        Document doc = (Document) build.parse(lib);
            
        NodeList dictionary = doc.getElementsByTagName("record");
        for(int i = 0; i < dictionary.getLength(); i++)
        {
            NodeList record = dictionary.item(i).getChildNodes();
            String word = null, meaning = null;
            for(int j = 0; j < record.getLength(); j++)
            {
                if("word".equals(record.item(j).getNodeName()))
                    word = record.item(j).getTextContent();
                if("meaning".equals(record.item(j).getNodeName()))
                    meaning = record.item(j).getTextContent();
            }
            if(word != null && meaning != null)
            {
                dic.put(word, meaning);
            }
        }
       
       
       }catch(ParserConfigurationException | SAXException | IOException | DOMException ex)
       {
       } 
    }
    
//    Dua du lieu vao list
     private void putWordToList(TreeMap<String, String> tm, DefaultListModel<String> model )
     {
         tm.keySet().forEach((x) -> {
             model.addElement(x);
        });
    }
    //Ghi file Favorite
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonFavorite;
    private javax.swing.JButton jButtonFind;
    private javax.swing.JButton jButtonRead;
    private javax.swing.JButton jButtonsoundfavorite;
    private com.toedter.calendar.JDateChooser jDateChooserbegin;
    private com.toedter.calendar.JDateChooser jDateChooserfinish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelResuft;
    private javax.swing.JLabel jLabelresuftfavorite;
    private javax.swing.JList<String> jListEV;
    private javax.swing.JList<String> jListElfavorite;
    private javax.swing.JList<String> jListVE;
    private javax.swing.JList<String> jListVnfavorite;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAV;
    private javax.swing.JPanel jPanelFavorite;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelStatictical;
    private javax.swing.JPanel jPanelVA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPaneAVVA;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTable jTableElHistory;
    private javax.swing.JTable jTableVNhistory;
    private javax.swing.JTextArea jTextAreaFavorite;
    private javax.swing.JTextField jTextFieldKeySearchAV;
    private javax.swing.JTextField jTextFieldKeySearchVA;
    private javax.swing.JTextPane jTextPaneResuft;
    // End of variables declaration//GEN-END:variables
}
